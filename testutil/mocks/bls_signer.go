// Code generated by MockGen. DO NOT EDIT.
// Source: x/checkpointing/keeper/bls_signer.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	bls12381 "github.com/babylonlabs-io/babylon/crypto/bls12381"
	crypto "github.com/cometbft/cometbft/crypto"
	types "github.com/cosmos/cosmos-sdk/types"
	gomock "github.com/golang/mock/gomock"
)

// MockBlsSigner is a mock of BlsSigner interface.
type MockBlsSigner struct {
	ctrl     *gomock.Controller
	recorder *MockBlsSignerMockRecorder
}

// MockBlsSignerMockRecorder is the mock recorder for MockBlsSigner.
type MockBlsSignerMockRecorder struct {
	mock *MockBlsSigner
}

// NewMockBlsSigner creates a new mock instance.
func NewMockBlsSigner(ctrl *gomock.Controller) *MockBlsSigner {
	mock := &MockBlsSigner{ctrl: ctrl}
	mock.recorder = &MockBlsSignerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlsSigner) EXPECT() *MockBlsSignerMockRecorder {
	return m.recorder
}

// GetAddress mocks base method.
func (m *MockBlsSigner) GetAddress() types.ValAddress {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAddress")
	ret0, _ := ret[0].(types.ValAddress)
	return ret0
}

// GetAddress indicates an expected call of GetAddress.
func (mr *MockBlsSignerMockRecorder) GetAddress() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAddress", reflect.TypeOf((*MockBlsSigner)(nil).GetAddress))
}

// GetBlsPubkey mocks base method.
func (m *MockBlsSigner) GetBlsPubkey() (bls12381.PublicKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlsPubkey")
	ret0, _ := ret[0].(bls12381.PublicKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlsPubkey indicates an expected call of GetBlsPubkey.
func (mr *MockBlsSignerMockRecorder) GetBlsPubkey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlsPubkey", reflect.TypeOf((*MockBlsSigner)(nil).GetBlsPubkey))
}

// GetValidatorPubkey mocks base method.
func (m *MockBlsSigner) GetValidatorPubkey() (crypto.PubKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValidatorPubkey")
	ret0, _ := ret[0].(crypto.PubKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetValidatorPubkey indicates an expected call of GetValidatorPubkey.
func (mr *MockBlsSignerMockRecorder) GetValidatorPubkey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValidatorPubkey", reflect.TypeOf((*MockBlsSigner)(nil).GetValidatorPubkey))
}

// SignMsgWithBls mocks base method.
func (m *MockBlsSigner) SignMsgWithBls(msg []byte) (bls12381.Signature, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SignMsgWithBls", msg)
	ret0, _ := ret[0].(bls12381.Signature)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SignMsgWithBls indicates an expected call of SignMsgWithBls.
func (mr *MockBlsSignerMockRecorder) SignMsgWithBls(msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignMsgWithBls", reflect.TypeOf((*MockBlsSigner)(nil).SignMsgWithBls), msg)
}
