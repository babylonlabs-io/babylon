syntax = "proto3";
package babylon.btcstkconsumer.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "babylon/btcstkconsumer/v1/params.proto";

option go_package = "github.com/babylonlabs-io/babylon/v3/x/btcstkconsumer/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  // RegisterConsumer registers a Consumer to the btcstkconsumer module.
  rpc RegisterConsumer(MsgRegisterConsumer) returns (MsgRegisterConsumerResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "babylon/x/btcstkconsumer/v1/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgRegisterConsumer defines a message for registering Consumers to the
// btcstkconsumer module.
message MsgRegisterConsumer {
  option (cosmos.msg.v1.signer) = "signer";

  string signer = 1;
  // consumer_id is the ID of the consumer
  string consumer_id = 2;
  // consumer_name is the name of the consumer
  string consumer_name = 3;
  // consumer_description is a description for the consumer (can be empty)
  string consumer_description = 4;
  // rollup_finality_contract_address is the address of the
  // finality contract. The finality contract is deployed on Babylon and
  // serves as the data availability layer for finality signatures of the rollup.
  // (if set, then this means this is a rollup integration)
  string rollup_finality_contract_address = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // babylon_rewards_commission is the commission rate that Babylon charges for this consumer
  // Must be between 0 and 1 (inclusive)
  string babylon_rewards_commission = 6 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec"
  ];
}

// MsgRegisterConsumerResponse is the response to the MsgRegisterConsumer message.
message MsgRegisterConsumerResponse {}
