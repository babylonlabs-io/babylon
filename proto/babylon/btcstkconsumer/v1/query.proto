syntax = "proto3";
package babylon.btcstkconsumer.v1;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "babylon/btcstkconsumer/v1/params.proto";

option go_package = "github.com/babylonlabs-io/babylon/v3/x/btcstkconsumer/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/babylon/btcstkconsumer/v1/params";
  }
  // ConsumerRegistryList queries the list of consumers that are registered to Babylon
  rpc ConsumerRegistryList(QueryConsumerRegistryListRequest) returns (QueryConsumerRegistryListResponse) {
    option (google.api.http).get = "/babylon/btcstkconsumer/v1/consumer_registry_list";
  }
  // ConsumersRegistry queries the latest info for a given list of consumers in Babylon's view
  rpc ConsumersRegistry(QueryConsumersRegistryRequest) returns (QueryConsumersRegistryResponse) {
    option (google.api.http).get = "/babylon/btcstkconsumer/v1/consumers_registry/{consumer_ids}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// QueryConsumerRegistryListRequest is request type for the Query/ConsumerRegistryList RPC method
message QueryConsumerRegistryListRequest {
  // pagination defines whether to have the pagination in the request
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryConsumerRegistryListResponse is response type for the Query/ConsumerRegistryList RPC method
message QueryConsumerRegistryListResponse {
  // consumer_registers are the registered consumers in ascending alphabetical order
  repeated ConsumerRegisterResponse consumer_registers = 1;
  // pagination defines the pagination in the response
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryConsumersRegistryRequest is request type for the Query/ConsumersRegistry RPC method.
message QueryConsumersRegistryRequest { repeated string consumer_ids = 1; }

// QueryConsumersRegistryResponse is response type for the Query/ConsumersRegistry RPC method.
message QueryConsumersRegistryResponse {
  repeated ConsumerRegisterResponse consumer_registers = 1;
}

// ConsumerRegisterResponse contains the information for a registered consumer
// The struct is used in the query responses
message ConsumerRegisterResponse {
  // consumer_id is the ID of the consumer
  // - for Cosmos SDK chains, the consumer ID will be the IBC client ID
  // - for rollup chains, the consumer ID will be the chain ID of the rollup
  //   chain
  string consumer_id = 1;
  // consumer_name is the name of the consumer
  string consumer_name = 2;
  // consumer_description is a description for the consumer (can be empty)
  string consumer_description = 3;
  // cosmos_channel_id is the IBC channel ID for the consumer
  // set only for Cosmos integration
  string cosmos_channel_id = 4;
  // rollup_finality_contract_address is the address of the finality contract
  // set only for rollup integration
  string rollup_finality_contract_address = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // babylon_rewards_commission is the commission rate that Babylon takes from rewards
  // distributed to finality providers for this BSN consumer
  string babylon_rewards_commission = 6 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}
