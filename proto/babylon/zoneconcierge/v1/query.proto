syntax = "proto3";
package babylon.zoneconcierge.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "babylon/btccheckpoint/v1/btccheckpoint.proto";
import "babylon/checkpointing/v1/checkpoint.proto";
import "babylon/epoching/v1/epoching.proto";
import "babylon/zoneconcierge/v1/zoneconcierge.proto";
import "babylon/zoneconcierge/v1/params.proto";

option go_package = "github.com/babylonlabs-io/babylon/v4/x/zoneconcierge/types";

// Query defines the gRPC querier service.
service Query {
  // Params queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/babylon/zoneconcierge/v1/params";
  }
  // FinalizedBSNsInfo queries the BTC-finalised info of BSNs with given IDs, with proofs
  rpc FinalizedBSNsInfo(QueryFinalizedBSNsInfoRequest)
      returns (QueryFinalizedBSNsInfoResponse) {
    option (google.api.http).get =
        "/babylon/zoneconcierge/v1/finalized_bsns_info";
  }
  // LatestEpochHeader queries the latest epoch header for a given consumer ID
  rpc LatestEpochHeader(QueryLatestEpochHeaderRequest) returns
      (QueryLatestEpochHeaderResponse){
    option (google.api.http).get =
        "/babylon/zoneconcierge/v1/latest_epoch_header/{consumer_id}";
  }
  // BSNLastSentSegment queries the last sent segment of a given consumer ID
  rpc BSNLastSentSegment(QueryBSNLastSentSegmentRequest) returns
      (QueryBSNLastSentSegmentResponse) {
    option (google.api.http).get =
        "/babylon/zoneconcierge/v1/bsn_last_sent_segment/{consumer_id}";
  }
  // SealedEpochProof queries the proof of a sealed epoch
  rpc GetSealedEpochProof(QueryGetSealedEpochProofRequest) returns
      (QueryGetSealedEpochProofResponse) {
    option (google.api.http).get =
        "/babylon/zoneconcierge/v1/sealed_epoch_proof/{epoch_num}";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  babylon.zoneconcierge.v1.Params params = 1 [ (gogoproto.nullable) = false ];
}

// QueryFinalizedBSNsInfoRequest is request type for the
// Query/FinalizedBSNsInfo RPC method.
message QueryFinalizedBSNsInfoRequest {
  // consumer_ids is the list of ids of BSNs
  repeated string consumer_ids = 1;
  // prove indicates whether the querier wants to get proofs of this timestamp
  bool prove = 2;
}

// QueryFinalizedBSNsInfoResponse is response type for the
// Query/FinalizedBSNsInfo RPC method.
message QueryFinalizedBSNsInfoResponse {
  repeated FinalizedBSNData finalized_bsns_data = 1;
}

// FinalizedBSNData contains the finalized BSN data for a BSN
message FinalizedBSNData {
  string consumer_id = 1;
  // The latest finalized header for this BSN
  IndexedHeader latest_finalized_header = 2;
  // The epoch in which this header was finalized
  babylon.epoching.v1.Epoch epoch_info = 3;
  // The raw checkpoint of this epoch
  babylon.checkpointing.v1.RawCheckpoint raw_checkpoint = 4;
  // The submission key for the checkpoint
  babylon.btccheckpoint.v1.SubmissionKey btc_submission_key = 5;
  // Proofs of finality
  ProofFinalizedHeader proof = 6;
}

// QueryLatestEpochHeadersRequest is request type for the
// QueryLatestEpochHeadersRequest RPC method.
message QueryLatestEpochHeaderRequest {
  string consumer_id = 1;
}

// QueryLatestEpochHeaderResponse is response type for the
// QueryLatestEpochHeaderResponse RPC method.
message QueryLatestEpochHeaderResponse {
  IndexedHeader header = 1;
}
// QueryBSNLastSentSegmentRequest is request type for the
// QueryBSNLastSentSegmentRequest RPC method.
message QueryBSNLastSentSegmentRequest {
  string consumer_id = 1;
}
// QueryBSNLastSentSegmentResponse is response type for the
// QueryBSNLastSentSegmentResponse RPC method.
message QueryBSNLastSentSegmentResponse {
  BTCChainSegment segment = 1;
}
// QuerySealedEpochProofRequest is request type for the
// QuerySealedEpochProofRequest RPC method.
message QueryGetSealedEpochProofRequest {
  uint64 epoch_num = 1;
}
// QuerySealedEpochProofResponse is response type for the
// QuerySealedEpochProofResponse RPC method.
message QueryGetSealedEpochProofResponse {
  ProofEpochSealed epoch = 1;
}