{
  "swagger": "2.0",
  "info": {
    "title": "babylon/btclightclient/v1/query.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/babylon/btclightclient/v1/baseheader": {
      "get": {
        "summary": "BaseHeader returns the base BTC header of the chain. This header is defined\non genesis.",
        "operationId": "BaseHeader",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.btclightclient.v1.QueryBaseHeaderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/btclightclient/v1/contains": {
      "get": {
        "summary": "Contains checks whether a hash is maintained by the module.",
        "operationId": "Contains",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.btclightclient.v1.QueryContainsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/btclightclient/v1/containsBytes": {
      "get": {
        "summary": "ContainsBytes is a temporary method that\nchecks whether a hash is maintained by the module.\nSee discussion at https://github.com/babylonlabs-io/babylon/pull/132\nfor more details.",
        "operationId": "ContainsBytes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.btclightclient.v1.QueryContainsBytesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/btclightclient/v1/depth/{hash}": {
      "get": {
        "summary": "HeaderDepth returns the depth of the header in main chain or error if the\nblock is not found or it exists on fork",
        "operationId": "HeaderDepth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.btclightclient.v1.QueryHeaderDepthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/btclightclient/v1/hashes": {
      "get": {
        "summary": "Hashes retrieves the hashes maintained by the module.",
        "operationId": "Hashes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.btclightclient.v1.QueryHashesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/btclightclient/v1/mainchain": {
      "get": {
        "summary": "MainChain returns the canonical chain",
        "operationId": "MainChain",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.btclightclient.v1.QueryMainChainResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/btclightclient/v1/params": {
      "get": {
        "summary": "Params queries the parameters of the module.",
        "operationId": "Params",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.btclightclient.v1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/btclightclient/v1/tip": {
      "get": {
        "summary": "Tip return best header on canonical chain",
        "operationId": "Tip",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.btclightclient.v1.QueryTipResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    }
  },
  "definitions": {
    "babylon.btclightclient.v1.BTCHeaderInfoResponse": {
      "type": "object",
      "properties": {
        "header_hex": {
          "type": "string"
        },
        "hash_hex": {
          "type": "string"
        },
        "height": {
          "type": "integer",
          "format": "int64"
        },
        "work": {
          "type": "string",
          "description": "Work is the sdkmath.Uint as string."
        }
      },
      "description": "BTCHeaderInfoResponse is a structure that contains all relevant information about a\nBTC header response\n - Full header as string hex.\n - Header hash for easy retrieval as string hex.\n - Height of the header in the BTC chain.\n - Total work spent on the header. This is the sum of the work corresponding\n to the header Bits field\n   and the total work of the header."
    },
    "babylon.btclightclient.v1.Params": {
      "type": "object",
      "properties": {
        "insert_headers_allow_list": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of addresses which are allowed to insert headers to btc light client\nif the list is empty, any address can insert headers"
        }
      },
      "description": "Params defines the parameters for the module."
    },
    "babylon.btclightclient.v1.QueryBaseHeaderResponse": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/babylon.btclightclient.v1.BTCHeaderInfoResponse"
        }
      },
      "description": "QueryBaseHeaderResponse is the response type for the Query/BaseHeader RPC\nmethod."
    },
    "babylon.btclightclient.v1.QueryContainsBytesResponse": {
      "type": "object",
      "properties": {
        "contains": {
          "type": "boolean"
        }
      },
      "description": "QueryContainsResponse is response type for the temporary Query/ContainsBytes\nRPC method."
    },
    "babylon.btclightclient.v1.QueryContainsResponse": {
      "type": "object",
      "properties": {
        "contains": {
          "type": "boolean"
        }
      },
      "description": "QueryContainsResponse is response type for the Query/Contains RPC method."
    },
    "babylon.btclightclient.v1.QueryHashesResponse": {
      "type": "object",
      "properties": {
        "hashes": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse"
        }
      },
      "description": "QueryHashesResponse is response type for the Query/Hashes RPC method."
    },
    "babylon.btclightclient.v1.QueryHeaderDepthResponse": {
      "type": "object",
      "properties": {
        "depth": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "QueryMainChainDepthResponse is the response type for the Query/MainChainDepth RPC\nit contains depth of the block in main chain"
    },
    "babylon.btclightclient.v1.QueryMainChainResponse": {
      "type": "object",
      "properties": {
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/babylon.btclightclient.v1.BTCHeaderInfoResponse"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse"
        }
      },
      "description": "QueryMainChainResponse is response type for the Query/MainChain RPC method."
    },
    "babylon.btclightclient.v1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/babylon.btclightclient.v1.Params",
          "description": "params holds all the parameters of this module."
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    },
    "babylon.btclightclient.v1.QueryTipResponse": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/babylon.btclightclient.v1.BTCHeaderInfoResponse"
        }
      },
      "description": "QueryTipResponse is the response type for the Query/Tip RPC method."
    },
    "cosmos.base.query.v1beta1.PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "count_total": {
          "type": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set."
        },
        "reverse": {
          "type": "boolean",
          "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:"
    },
    "cosmos.base.query.v1beta1.PageResponse": {
      "type": "object",
      "properties": {
        "next_key": {
          "type": "string",
          "format": "byte",
          "description": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  }
}
