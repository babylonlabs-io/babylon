{
  "swagger": "2.0",
  "info": {
    "title": "babylon/finality/v1/query.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/babylon/finality/v1/activated_height": {
      "get": {
        "summary": "ActivatedHeight queries the height when BTC staking protocol is activated, i.e., the first height when\nthere exists 1 finality provider with voting power",
        "operationId": "ActivatedHeight",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.finality.v1.QueryActivatedHeightResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/finality/v1/blocks": {
      "get": {
        "summary": "ListBlocks is a range query for blocks at a given status",
        "operationId": "ListBlocks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.finality.v1.QueryListBlocksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "status",
            "description": "status indicates the status of blocks that the querier wants to query.\n\n - NON_FINALIZED: NON_FINALIZED means the block is not finalised\n - FINALIZED: FINALIZED means the block is finalized\n - ANY: ANY means the block can be in any status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NON_FINALIZED",
              "FINALIZED",
              "ANY"
            ],
            "default": "NON_FINALIZED"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/finality/v1/blocks/{height}": {
      "get": {
        "summary": "Block queries a block at a given height",
        "operationId": "Block",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.finality.v1.QueryBlockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "description": "height is the height of the Babylon block",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/finality/v1/evidences": {
      "get": {
        "summary": "ListEvidences queries is a range query for evidences",
        "operationId": "ListEvidences",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.finality.v1.QueryListEvidencesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "start_height",
            "description": "start_height is the starting height that the querier specifies\nsuch that the RPC will only return evidences since this height.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/finality/v1/finality_providers/{fp_btc_pk_hex}/evidence": {
      "get": {
        "summary": "Evidence queries the first evidence which can be used for extracting the BTC SK",
        "operationId": "Evidence",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.finality.v1.QueryEvidenceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "fp_btc_pk_hex",
            "description": "fp_btc_pk_hex is the hex str of Bitcoin secp256k1 PK\n(in BIP340 format) of the finality provider",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/finality/v1/finality_providers/{fp_btc_pk_hex}/power": {
      "get": {
        "summary": "FinalityProviderCurrentPower queries the voting power of a finality provider at the current height",
        "operationId": "FinalityProviderCurrentPower",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.finality.v1.QueryFinalityProviderCurrentPowerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "fp_btc_pk_hex",
            "description": "fp_btc_pk_hex is the hex str of Bitcoin secp256k1 PK of the finality provider that\nthis BTC delegation delegates to\nthe PK follows encoding in BIP-340 spec",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/finality/v1/finality_providers/{fp_btc_pk_hex}/power/{height}": {
      "get": {
        "summary": "FinalityProviderPowerAtHeight queries the voting power of a finality provider at a given height",
        "operationId": "FinalityProviderPowerAtHeight",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.finality.v1.QueryFinalityProviderPowerAtHeightResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "fp_btc_pk_hex",
            "description": "fp_btc_pk_hex is the hex str of Bitcoin secp256k1 PK of the finality provider that\nthis BTC delegation delegates to\nthe PK follows encoding in BIP-340 spec",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "height",
            "description": "height is used for querying the given finality provider's voting power at this height",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/finality/v1/finality_providers/{fp_btc_pk_hex}/pub_rand_commit_list": {
      "get": {
        "summary": "ListPubRandCommit is a range query for public randomness commitments of a given finality provider",
        "operationId": "ListPubRandCommit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.finality.v1.QueryListPubRandCommitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "fp_btc_pk_hex",
            "description": "fp_btc_pk_hex is the hex str of Bitcoin secp256k1 PK of the finality provider",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/finality/v1/finality_providers/{fp_btc_pk_hex}/public_randomness_list": {
      "get": {
        "summary": "ListPublicRandomness is a range query for public randomness of a given finality provider\nNOTE: Babylon only has the knowledge of public randomness that is already revealed by\nfinality providers, i.e., the finality provider already provides a finality signature\nat the corresponding height",
        "operationId": "ListPublicRandomness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.finality.v1.QueryListPublicRandomnessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "fp_btc_pk_hex",
            "description": "fp_btc_pk_hex is the hex str of Bitcoin secp256k1 PK of the finality provider",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/finality/v1/finality_providers/{height}": {
      "get": {
        "summary": "ActiveFinalityProvidersAtHeight queries finality providers with non zero voting power at given height.",
        "operationId": "ActiveFinalityProvidersAtHeight",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.finality.v1.QueryActiveFinalityProvidersAtHeightResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "description": "height defines at which Babylon height to query the finality providers info.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/finality/v1/params": {
      "get": {
        "summary": "Parameters queries the parameters of the module.",
        "operationId": "Params",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.finality.v1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/finality/v1/signing_infos": {
      "get": {
        "summary": "SigningInfos queries the signing info of all the active finality providers",
        "operationId": "SigningInfos",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.finality.v1.QuerySigningInfosResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/finality/v1/signing_infos/{fp_btc_pk_hex}": {
      "get": {
        "summary": "SigningInfo queries the signing info of given finality provider BTC public key",
        "operationId": "SigningInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.finality.v1.QuerySigningInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "fp_btc_pk_hex",
            "description": "fp_btc_pk_hex is the hex str of Bitcoin secp256k1 PK\n(in BIP340 format) of the finality provider",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/babylon/finality/v1/votes/{height}": {
      "get": {
        "summary": "VotesAtHeight queries finality providers who have signed the block at given height.",
        "operationId": "VotesAtHeight",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/babylon.finality.v1.QueryVotesAtHeightResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "description": "height defines at which height to query the finality providers.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    }
  },
  "definitions": {
    "babylon.finality.v1.ActiveFinalityProvidersAtHeightResponse": {
      "type": "object",
      "properties": {
        "btc_pk_hex": {
          "type": "string",
          "title": "btc_pk is the Bitcoin secp256k1 PK of thisfinality provider\nthe PK follows encoding in BIP-340 spec"
        },
        "height": {
          "type": "string",
          "format": "uint64",
          "title": "height is the queried Babylon height"
        },
        "voting_power": {
          "type": "string",
          "format": "uint64",
          "title": "voting_power is the voting power of this finality provider at the given height"
        },
        "slashed_babylon_height": {
          "type": "string",
          "format": "uint64",
          "title": "slashed_babylon_height indicates the Babylon height when\nthe finality provider is slashed.\nif it's 0 then the finality provider is not slashed"
        },
        "slashed_btc_height": {
          "type": "integer",
          "format": "int64",
          "title": "slashed_btc_height indicates the BTC height when\nthe finality provider is slashed.\nif it's 0 then the finality provider is not slashed"
        },
        "jailed": {
          "type": "boolean",
          "title": "jailed defines whether the finality provider is detected jailed"
        },
        "highest_voted_height": {
          "type": "integer",
          "format": "int64",
          "title": "highest_voted_height is the highest height for which the\nfinality provider has voted"
        }
      },
      "description": "ActiveFinalityProvidersAtHeightResponse wraps the FinalityProvider with metadata."
    },
    "babylon.finality.v1.EvidenceResponse": {
      "type": "object",
      "properties": {
        "fp_btc_pk_hex": {
          "type": "string",
          "title": "fp_btc_pk_hex is the BTC PK of the finality provider that casts this vote"
        },
        "block_height": {
          "type": "string",
          "format": "uint64",
          "title": "block_height is the height of the conflicting blocks"
        },
        "pub_rand": {
          "type": "string",
          "format": "byte",
          "title": "pub_rand is the public randomness the finality provider has committed to"
        },
        "canonical_app_hash": {
          "type": "string",
          "format": "byte",
          "title": "canonical_app_hash is the AppHash of the canonical block"
        },
        "fork_app_hash": {
          "type": "string",
          "format": "byte",
          "title": "fork_app_hash is the AppHash of the fork block"
        },
        "canonical_finality_sig": {
          "type": "string",
          "format": "byte",
          "title": "canonical_finality_sig is the finality signature to the canonical block\nwhere finality signature is an EOTS signature, i.e.,\nthe `s` in a Schnorr signature `(r, s)`\n`r` is the public randomness that is already committed by the finality provider"
        },
        "fork_finality_sig": {
          "type": "string",
          "format": "byte",
          "title": "fork_finality_sig is the finality signature to the fork block\nwhere finality signature is an EOTS signature"
        }
      },
      "title": "Evidence is the evidence that a finality provider has signed finality\nsignatures with correct public randomness on two conflicting Babylon headers"
    },
    "babylon.finality.v1.IndexedBlock": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "uint64",
          "title": "height is the height of the block"
        },
        "app_hash": {
          "type": "string",
          "format": "byte",
          "title": "app_hash is the AppHash of the block"
        },
        "finalized": {
          "type": "boolean",
          "title": "finalized indicates whether the IndexedBlock is finalised by 2/3\nfinality providers or not"
        }
      },
      "title": "IndexedBlock is the necessary metadata and finalization status of a block"
    },
    "babylon.finality.v1.Params": {
      "type": "object",
      "properties": {
        "max_active_finality_providers": {
          "type": "integer",
          "format": "int64",
          "title": "max_active_finality_providers is the maximum number of active finality providers in the BTC staking protocol"
        },
        "signed_blocks_window": {
          "type": "string",
          "format": "int64",
          "title": "signed_blocks_window defines the size of the sliding window for tracking finality provider liveness"
        },
        "finality_sig_timeout": {
          "type": "string",
          "format": "int64",
          "title": "finality_sig_timeout defines how much time (in terms of blocks) finality providers have to cast a finality\nvote before being judged as missing their voting turn on the given block"
        },
        "min_signed_per_window": {
          "type": "string",
          "format": "byte",
          "title": "min_signed_per_window defines the minimum number of blocks that a finality provider is required to sign\nwithin the sliding window to avoid being jailed"
        },
        "min_pub_rand": {
          "type": "string",
          "format": "uint64",
          "title": "min_pub_rand is the minimum number of public randomness each\nmessage should commit"
        },
        "jail_duration": {
          "type": "string",
          "title": "jail_duration is the minimum period of time that a finality provider remains jailed"
        },
        "finality_activation_height": {
          "type": "string",
          "format": "uint64",
          "description": "finality_activation_height is the babylon block height which the finality module will\nstart to accept finality voting and the minimum allowed value for the public randomness\ncommit start height."
        }
      },
      "description": "Params defines the parameters for the module."
    },
    "babylon.finality.v1.PubRandCommitResponse": {
      "type": "object",
      "properties": {
        "num_pub_rand": {
          "type": "string",
          "format": "uint64",
          "title": "num_pub_rand is the number of committed public randomness"
        },
        "commitment": {
          "type": "string",
          "format": "byte",
          "title": "commitment is the value of the commitment"
        },
        "epoch_num": {
          "type": "string",
          "format": "uint64",
          "title": "epoch_num defines the epoch number that the commit falls into"
        }
      },
      "title": "PubRandCommitResponse is the response type for a public randomness commitment"
    },
    "babylon.finality.v1.QueriedBlockStatus": {
      "type": "string",
      "enum": [
        "NON_FINALIZED",
        "FINALIZED",
        "ANY"
      ],
      "default": "NON_FINALIZED",
      "description": "QueriedBlockStatus is the status of blocks that the querier wants to query.\n\n - NON_FINALIZED: NON_FINALIZED means the block is not finalised\n - FINALIZED: FINALIZED means the block is finalized\n - ANY: ANY means the block can be in any status"
    },
    "babylon.finality.v1.QueryActivatedHeightResponse": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "uint64"
        }
      },
      "description": "QueryActivatedHeightResponse is the response type for the Query/ActivatedHeight RPC method."
    },
    "babylon.finality.v1.QueryActiveFinalityProvidersAtHeightResponse": {
      "type": "object",
      "properties": {
        "finality_providers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/babylon.finality.v1.ActiveFinalityProvidersAtHeightResponse"
          },
          "description": "finality_providers contains all the queried finality providersn."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryActiveFinalityProvidersAtHeightResponse is the response type for the\nQuery/ActiveFinalityProvidersAtHeight RPC method."
    },
    "babylon.finality.v1.QueryBlockResponse": {
      "type": "object",
      "properties": {
        "block": {
          "$ref": "#/definitions/babylon.finality.v1.IndexedBlock",
          "title": "block is the Babylon at the given height"
        }
      },
      "description": "QueryBlockResponse is the response type for the\nQuery/Block RPC method."
    },
    "babylon.finality.v1.QueryEvidenceResponse": {
      "type": "object",
      "properties": {
        "evidence": {
          "$ref": "#/definitions/babylon.finality.v1.EvidenceResponse"
        }
      },
      "description": "QueryEvidenceResponse is the response type for the\nQuery/Evidence RPC method."
    },
    "babylon.finality.v1.QueryFinalityProviderCurrentPowerResponse": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "uint64",
          "title": "height is the current height"
        },
        "voting_power": {
          "type": "string",
          "format": "uint64",
          "title": "voting_power is the voting power of the finality provider"
        }
      },
      "description": "QueryFinalityProviderCurrentPowerResponse is the response type for the\nQuery/FinalityProviderCurrentPower RPC method."
    },
    "babylon.finality.v1.QueryFinalityProviderPowerAtHeightResponse": {
      "type": "object",
      "properties": {
        "voting_power": {
          "type": "string",
          "format": "uint64",
          "title": "voting_power is the voting power of the finality provider"
        }
      },
      "description": "QueryFinalityProviderPowerAtHeightResponse is the response type for the\nQuery/FinalityProviderPowerAtHeight RPC method."
    },
    "babylon.finality.v1.QueryListBlocksResponse": {
      "type": "object",
      "properties": {
        "blocks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/babylon.finality.v1.IndexedBlock"
          },
          "title": "blocks is the list of blocks at the given status"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryListBlocksResponse is the response type for the\nQuery/ListBlocks RPC method."
    },
    "babylon.finality.v1.QueryListEvidencesResponse": {
      "type": "object",
      "properties": {
        "evidences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/babylon.finality.v1.EvidenceResponse"
          },
          "title": "blocks is the list of evidences"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryListEvidencesResponse is the response type for the\nQuery/ListEvidences RPC method."
    },
    "babylon.finality.v1.QueryListPubRandCommitResponse": {
      "type": "object",
      "properties": {
        "pub_rand_commit_map": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/babylon.finality.v1.PubRandCommitResponse"
          },
          "title": "pub_rand_commit_map is the map where the key is the start height and the value\nis the public randomness commitment at this height for the given finality provider"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryListPubRandCommitResponse is the response type for the\nQuery/ListPubRandCommit RPC method."
    },
    "babylon.finality.v1.QueryListPublicRandomnessResponse": {
      "type": "object",
      "properties": {
        "pub_rand_map": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          },
          "title": "pub_rand_map is the map where the key is the height and the value\nis the public randomness at this height for the given finality provider"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryListPublicRandomnessResponse is the response type for the\nQuery/ListPublicRandomness RPC method."
    },
    "babylon.finality.v1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/babylon.finality.v1.Params",
          "description": "params holds all the parameters of this module."
        }
      },
      "description": "QueryParamsResponse is response type for the Query/Params RPC method."
    },
    "babylon.finality.v1.QuerySigningInfoResponse": {
      "type": "object",
      "properties": {
        "signing_info": {
          "$ref": "#/definitions/babylon.finality.v1.SigningInfoResponse"
        }
      },
      "title": "QuerySigningInfoResponse is the response type for the Query/SigningInfo RPC\nmethod"
    },
    "babylon.finality.v1.QuerySigningInfosResponse": {
      "type": "object",
      "properties": {
        "signing_infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/babylon.finality.v1.SigningInfoResponse"
          },
          "title": "info is the signing info of all finality providers with signing info"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse"
        }
      },
      "title": "QuerySigningInfosResponse is the response type for the Query/SigningInfos RPC\nmethod"
    },
    "babylon.finality.v1.QueryVotesAtHeightResponse": {
      "type": "object",
      "properties": {
        "btc_pks": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "title": "btc_pk is the Bitcoin secp256k1 PK of finality providers who have signed the block at given height.\nthe PK follows encoding in BIP-340 spec"
        }
      },
      "description": "QueryVotesAtHeightResponse is the response type for the\nQuery/VotesAtHeight RPC method."
    },
    "babylon.finality.v1.SigningInfoResponse": {
      "type": "object",
      "properties": {
        "fp_btc_pk_hex": {
          "type": "string",
          "title": "fp_btc_pk is the BTC PK of the finality provider that casts this vote"
        },
        "start_height": {
          "type": "string",
          "format": "int64",
          "title": "start_height is the block height at which finality provider become active"
        },
        "missed_blocks_counter": {
          "type": "string",
          "format": "int64",
          "description": "missed_blocks_counter defines a counter to avoid unnecessary array reads.\nNote that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`."
        },
        "jailed_until": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp until which the validator is jailed due to liveness downtime."
        }
      },
      "description": "SigningInfoResponse defines the API response containing a finality provider's signing info\nfor monitoring their liveness activity."
    },
    "cosmos.base.query.v1beta1.PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "count_total": {
          "type": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set."
        },
        "reverse": {
          "type": "boolean",
          "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:"
    },
    "cosmos.base.query.v1beta1.PageResponse": {
      "type": "object",
      "properties": {
        "next_key": {
          "type": "string",
          "format": "byte",
          "description": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  }
}
