// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: babylon/btcstkconsumer/v1/btcstkconsumer.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// ConsumerType defines the type of consumer chain
type ConsumerType int32

const (
	// COSMOS represents a Cosmos SDK chain consumer
	ConsumerType_COSMOS ConsumerType = 0
	// ROLLUP represents a rollup chain consumer
	ConsumerType_ROLLUP ConsumerType = 1
)

var ConsumerType_name = map[int32]string{
	0: "COSMOS",
	1: "ROLLUP",
}

var ConsumerType_value = map[string]int32{
	"COSMOS": 0,
	"ROLLUP": 1,
}

func (x ConsumerType) String() string {
	return proto.EnumName(ConsumerType_name, int32(x))
}

func (ConsumerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_de3ccd621fe1efd4, []int{0}
}

// ConsumerRegister is the registration information of a consumer
type ConsumerRegister struct {
	// consumer_id is the ID of the consumer
	// - for Cosmos SDK chains, the consumer ID will be the IBC client ID
	// - for rollup chains, the consumer ID will be the chain ID of the rollup
	//   chain
	ConsumerId string `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	// consumer_name is the name of the consumer
	ConsumerName string `protobuf:"bytes,2,opt,name=consumer_name,json=consumerName,proto3" json:"consumer_name,omitempty"`
	// consumer_description is a description for the consumer (can be empty)
	ConsumerDescription string `protobuf:"bytes,3,opt,name=consumer_description,json=consumerDescription,proto3" json:"consumer_description,omitempty"`
	// consumer_metadata is necessary metadata of the consumer, and the data
	// depends on the type of integration
	//
	// Types that are valid to be assigned to ConsumerMetadata:
	//	*ConsumerRegister_CosmosConsumerMetadata
	//	*ConsumerRegister_RollupConsumerMetadata
	ConsumerMetadata isConsumerRegister_ConsumerMetadata `protobuf_oneof:"consumer_metadata"`
}

func (m *ConsumerRegister) Reset()         { *m = ConsumerRegister{} }
func (m *ConsumerRegister) String() string { return proto.CompactTextString(m) }
func (*ConsumerRegister) ProtoMessage()    {}
func (*ConsumerRegister) Descriptor() ([]byte, []int) {
	return fileDescriptor_de3ccd621fe1efd4, []int{0}
}
func (m *ConsumerRegister) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConsumerRegister) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConsumerRegister.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConsumerRegister) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumerRegister.Merge(m, src)
}
func (m *ConsumerRegister) XXX_Size() int {
	return m.Size()
}
func (m *ConsumerRegister) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumerRegister.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumerRegister proto.InternalMessageInfo

type isConsumerRegister_ConsumerMetadata interface {
	isConsumerRegister_ConsumerMetadata()
	MarshalTo([]byte) (int, error)
	Size() int
}

type ConsumerRegister_CosmosConsumerMetadata struct {
	CosmosConsumerMetadata *CosmosConsumerMetadata `protobuf:"bytes,4,opt,name=cosmos_consumer_metadata,json=cosmosConsumerMetadata,proto3,oneof" json:"cosmos_consumer_metadata,omitempty"`
}
type ConsumerRegister_RollupConsumerMetadata struct {
	RollupConsumerMetadata *RollupConsumerMetadata `protobuf:"bytes,5,opt,name=rollup_consumer_metadata,json=rollupConsumerMetadata,proto3,oneof" json:"rollup_consumer_metadata,omitempty"`
}

func (*ConsumerRegister_CosmosConsumerMetadata) isConsumerRegister_ConsumerMetadata() {}
func (*ConsumerRegister_RollupConsumerMetadata) isConsumerRegister_ConsumerMetadata() {}

func (m *ConsumerRegister) GetConsumerMetadata() isConsumerRegister_ConsumerMetadata {
	if m != nil {
		return m.ConsumerMetadata
	}
	return nil
}

func (m *ConsumerRegister) GetConsumerId() string {
	if m != nil {
		return m.ConsumerId
	}
	return ""
}

func (m *ConsumerRegister) GetConsumerName() string {
	if m != nil {
		return m.ConsumerName
	}
	return ""
}

func (m *ConsumerRegister) GetConsumerDescription() string {
	if m != nil {
		return m.ConsumerDescription
	}
	return ""
}

func (m *ConsumerRegister) GetCosmosConsumerMetadata() *CosmosConsumerMetadata {
	if x, ok := m.GetConsumerMetadata().(*ConsumerRegister_CosmosConsumerMetadata); ok {
		return x.CosmosConsumerMetadata
	}
	return nil
}

func (m *ConsumerRegister) GetRollupConsumerMetadata() *RollupConsumerMetadata {
	if x, ok := m.GetConsumerMetadata().(*ConsumerRegister_RollupConsumerMetadata); ok {
		return x.RollupConsumerMetadata
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ConsumerRegister) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ConsumerRegister_CosmosConsumerMetadata)(nil),
		(*ConsumerRegister_RollupConsumerMetadata)(nil),
	}
}

// CosmosConsumerMetadata is the metadata for the Cosmos integration
type CosmosConsumerMetadata struct {
	// channel_id defines the IBC channel ID for the consumer chain
	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (m *CosmosConsumerMetadata) Reset()         { *m = CosmosConsumerMetadata{} }
func (m *CosmosConsumerMetadata) String() string { return proto.CompactTextString(m) }
func (*CosmosConsumerMetadata) ProtoMessage()    {}
func (*CosmosConsumerMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_de3ccd621fe1efd4, []int{1}
}
func (m *CosmosConsumerMetadata) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CosmosConsumerMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CosmosConsumerMetadata.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CosmosConsumerMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CosmosConsumerMetadata.Merge(m, src)
}
func (m *CosmosConsumerMetadata) XXX_Size() int {
	return m.Size()
}
func (m *CosmosConsumerMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_CosmosConsumerMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_CosmosConsumerMetadata proto.InternalMessageInfo

func (m *CosmosConsumerMetadata) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

// RollupConsumerMetadata is the metadata for the rollup integration
type RollupConsumerMetadata struct {
	// finality_contract_address is the address of the finality contract for
	// the rollup integration
	FinalityContractAddress string `protobuf:"bytes,1,opt,name=finality_contract_address,json=finalityContractAddress,proto3" json:"finality_contract_address,omitempty"`
}

func (m *RollupConsumerMetadata) Reset()         { *m = RollupConsumerMetadata{} }
func (m *RollupConsumerMetadata) String() string { return proto.CompactTextString(m) }
func (*RollupConsumerMetadata) ProtoMessage()    {}
func (*RollupConsumerMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_de3ccd621fe1efd4, []int{2}
}
func (m *RollupConsumerMetadata) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RollupConsumerMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RollupConsumerMetadata.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RollupConsumerMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollupConsumerMetadata.Merge(m, src)
}
func (m *RollupConsumerMetadata) XXX_Size() int {
	return m.Size()
}
func (m *RollupConsumerMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_RollupConsumerMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_RollupConsumerMetadata proto.InternalMessageInfo

func (m *RollupConsumerMetadata) GetFinalityContractAddress() string {
	if m != nil {
		return m.FinalityContractAddress
	}
	return ""
}

func init() {
	proto.RegisterEnum("babylon.btcstkconsumer.v1.ConsumerType", ConsumerType_name, ConsumerType_value)
	proto.RegisterType((*ConsumerRegister)(nil), "babylon.btcstkconsumer.v1.ConsumerRegister")
	proto.RegisterType((*CosmosConsumerMetadata)(nil), "babylon.btcstkconsumer.v1.CosmosConsumerMetadata")
	proto.RegisterType((*RollupConsumerMetadata)(nil), "babylon.btcstkconsumer.v1.RollupConsumerMetadata")
}

func init() {
	proto.RegisterFile("babylon/btcstkconsumer/v1/btcstkconsumer.proto", fileDescriptor_de3ccd621fe1efd4)
}

var fileDescriptor_de3ccd621fe1efd4 = []byte{
	// 421 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xed, 0x02, 0x95, 0x3a, 0x2d, 0x52, 0xd8, 0x56, 0xc1, 0x41, 0xc2, 0x54, 0x41, 0x42,
	0x15, 0x52, 0x6d, 0x99, 0x1e, 0x38, 0x70, 0x22, 0xe6, 0x40, 0xa5, 0x96, 0x20, 0xa7, 0xbd, 0x70,
	0x89, 0xd6, 0xeb, 0x25, 0x59, 0x61, 0xef, 0x5a, 0xbb, 0x9b, 0x08, 0xbf, 0x05, 0x0f, 0xc3, 0x43,
	0x70, 0x8c, 0x38, 0x71, 0x44, 0xc9, 0x7b, 0x20, 0x14, 0x7b, 0x37, 0x91, 0x82, 0x51, 0x6f, 0x9e,
	0xf9, 0xff, 0xcf, 0xff, 0x8c, 0x3d, 0x10, 0xa4, 0x38, 0xad, 0x72, 0xc1, 0xc3, 0x54, 0x13, 0xa5,
	0xbf, 0x10, 0xc1, 0xd5, 0xac, 0xa0, 0x32, 0x9c, 0x47, 0x3b, 0x9d, 0xa0, 0x94, 0x42, 0x0b, 0xd4,
	0x33, 0xfe, 0x60, 0x47, 0x9d, 0x47, 0x4f, 0x7a, 0x44, 0xa8, 0x42, 0xa8, 0x71, 0x6d, 0x0c, 0x9b,
	0xa2, 0xa1, 0xfa, 0x7f, 0xf6, 0xa0, 0x13, 0x1b, 0x6b, 0x42, 0x27, 0x4c, 0x69, 0x2a, 0xd1, 0x33,
	0x38, 0xb4, 0xf8, 0x98, 0x65, 0x9e, 0x7b, 0xea, 0x9e, 0x1d, 0x24, 0x60, 0x5b, 0x97, 0x19, 0x7a,
	0x0e, 0x0f, 0x37, 0x06, 0x8e, 0x0b, 0xea, 0xed, 0xd5, 0x96, 0x23, 0xdb, 0xfc, 0x80, 0x0b, 0x8a,
	0x22, 0x38, 0xd9, 0x98, 0x32, 0xaa, 0x88, 0x64, 0xa5, 0x66, 0x82, 0x7b, 0xf7, 0x6a, 0xef, 0xb1,
	0xd5, 0xde, 0x6d, 0x25, 0x54, 0x80, 0x67, 0x46, 0xdd, 0x90, 0x05, 0xd5, 0x38, 0xc3, 0x1a, 0x7b,
	0xf7, 0x4f, 0xdd, 0xb3, 0xc3, 0x57, 0x51, 0xf0, 0xdf, 0x35, 0x83, 0xb8, 0x46, 0xed, 0x36, 0xd7,
	0x06, 0x7c, 0xef, 0x24, 0x5d, 0xd2, 0xaa, 0xac, 0xe3, 0xa4, 0xc8, 0xf3, 0x59, 0xd9, 0x12, 0xf7,
	0xe0, 0xce, 0xb8, 0xa4, 0x46, 0xdb, 0xe2, 0x64, 0xab, 0x32, 0x38, 0x86, 0x47, 0xff, 0xe4, 0xf4,
	0x5f, 0x43, 0xb7, 0x7d, 0x6e, 0xf4, 0x14, 0x80, 0x4c, 0x31, 0xe7, 0x34, 0xdf, 0xfe, 0x84, 0x03,
	0xd3, 0xb9, 0xcc, 0xfa, 0x1c, 0xba, 0xed, 0x13, 0xa0, 0x1b, 0xe8, 0x7d, 0x66, 0x1c, 0xe7, 0x4c,
	0x57, 0xeb, 0xc5, 0xb4, 0xc4, 0x44, 0x8f, 0x71, 0x96, 0x49, 0xaa, 0x54, 0xf3, 0x9e, 0x81, 0xf7,
	0xf3, 0xfb, 0xf9, 0x89, 0x39, 0x84, 0xb7, 0x8d, 0x32, 0xd2, 0x92, 0xf1, 0x49, 0xf2, 0xd8, 0xa2,
	0xb1, 0x21, 0x8d, 0xfc, 0xf2, 0x05, 0x1c, 0xd9, 0xa4, 0x9b, 0xaa, 0xa4, 0x08, 0x60, 0x3f, 0x1e,
	0x8e, 0xae, 0x87, 0xa3, 0x8e, 0xb3, 0x7e, 0x4e, 0x86, 0x57, 0x57, 0xb7, 0x1f, 0x3b, 0xee, 0xe0,
	0xf6, 0xc7, 0xd2, 0x77, 0x17, 0x4b, 0xdf, 0xfd, 0xbd, 0xf4, 0xdd, 0x6f, 0x2b, 0xdf, 0x59, 0xac,
	0x7c, 0xe7, 0xd7, 0xca, 0x77, 0x3e, 0xbd, 0x99, 0x30, 0x3d, 0x9d, 0xa5, 0x01, 0x11, 0x45, 0x68,
	0x3e, 0x6b, 0x8e, 0x53, 0x75, 0xce, 0x84, 0x2d, 0xc3, 0xf9, 0x45, 0xf8, 0x75, 0xf7, 0xe0, 0x75,
	0x55, 0x52, 0x95, 0xee, 0xd7, 0xf7, 0x7a, 0xf1, 0x37, 0x00, 0x00, 0xff, 0xff, 0x8b, 0xe8, 0x2b,
	0x00, 0x17, 0x03, 0x00, 0x00,
}

func (m *ConsumerRegister) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConsumerRegister) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConsumerRegister) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ConsumerMetadata != nil {
		{
			size := m.ConsumerMetadata.Size()
			i -= size
			if _, err := m.ConsumerMetadata.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if len(m.ConsumerDescription) > 0 {
		i -= len(m.ConsumerDescription)
		copy(dAtA[i:], m.ConsumerDescription)
		i = encodeVarintBtcstkconsumer(dAtA, i, uint64(len(m.ConsumerDescription)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ConsumerName) > 0 {
		i -= len(m.ConsumerName)
		copy(dAtA[i:], m.ConsumerName)
		i = encodeVarintBtcstkconsumer(dAtA, i, uint64(len(m.ConsumerName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ConsumerId) > 0 {
		i -= len(m.ConsumerId)
		copy(dAtA[i:], m.ConsumerId)
		i = encodeVarintBtcstkconsumer(dAtA, i, uint64(len(m.ConsumerId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConsumerRegister_CosmosConsumerMetadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConsumerRegister_CosmosConsumerMetadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.CosmosConsumerMetadata != nil {
		{
			size, err := m.CosmosConsumerMetadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBtcstkconsumer(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *ConsumerRegister_RollupConsumerMetadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConsumerRegister_RollupConsumerMetadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.RollupConsumerMetadata != nil {
		{
			size, err := m.RollupConsumerMetadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBtcstkconsumer(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *CosmosConsumerMetadata) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CosmosConsumerMetadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CosmosConsumerMetadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ChannelId) > 0 {
		i -= len(m.ChannelId)
		copy(dAtA[i:], m.ChannelId)
		i = encodeVarintBtcstkconsumer(dAtA, i, uint64(len(m.ChannelId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RollupConsumerMetadata) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RollupConsumerMetadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RollupConsumerMetadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.FinalityContractAddress) > 0 {
		i -= len(m.FinalityContractAddress)
		copy(dAtA[i:], m.FinalityContractAddress)
		i = encodeVarintBtcstkconsumer(dAtA, i, uint64(len(m.FinalityContractAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintBtcstkconsumer(dAtA []byte, offset int, v uint64) int {
	offset -= sovBtcstkconsumer(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ConsumerRegister) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ConsumerId)
	if l > 0 {
		n += 1 + l + sovBtcstkconsumer(uint64(l))
	}
	l = len(m.ConsumerName)
	if l > 0 {
		n += 1 + l + sovBtcstkconsumer(uint64(l))
	}
	l = len(m.ConsumerDescription)
	if l > 0 {
		n += 1 + l + sovBtcstkconsumer(uint64(l))
	}
	if m.ConsumerMetadata != nil {
		n += m.ConsumerMetadata.Size()
	}
	return n
}

func (m *ConsumerRegister_CosmosConsumerMetadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CosmosConsumerMetadata != nil {
		l = m.CosmosConsumerMetadata.Size()
		n += 1 + l + sovBtcstkconsumer(uint64(l))
	}
	return n
}
func (m *ConsumerRegister_RollupConsumerMetadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RollupConsumerMetadata != nil {
		l = m.RollupConsumerMetadata.Size()
		n += 1 + l + sovBtcstkconsumer(uint64(l))
	}
	return n
}
func (m *CosmosConsumerMetadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChannelId)
	if l > 0 {
		n += 1 + l + sovBtcstkconsumer(uint64(l))
	}
	return n
}

func (m *RollupConsumerMetadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FinalityContractAddress)
	if l > 0 {
		n += 1 + l + sovBtcstkconsumer(uint64(l))
	}
	return n
}

func sovBtcstkconsumer(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBtcstkconsumer(x uint64) (n int) {
	return sovBtcstkconsumer(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ConsumerRegister) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBtcstkconsumer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConsumerRegister: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConsumerRegister: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConsumerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBtcstkconsumer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBtcstkconsumer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBtcstkconsumer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConsumerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConsumerName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBtcstkconsumer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBtcstkconsumer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBtcstkconsumer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConsumerName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConsumerDescription", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBtcstkconsumer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBtcstkconsumer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBtcstkconsumer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConsumerDescription = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CosmosConsumerMetadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBtcstkconsumer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBtcstkconsumer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBtcstkconsumer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &CosmosConsumerMetadata{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ConsumerMetadata = &ConsumerRegister_CosmosConsumerMetadata{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RollupConsumerMetadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBtcstkconsumer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBtcstkconsumer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBtcstkconsumer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &RollupConsumerMetadata{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ConsumerMetadata = &ConsumerRegister_RollupConsumerMetadata{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBtcstkconsumer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBtcstkconsumer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CosmosConsumerMetadata) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBtcstkconsumer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CosmosConsumerMetadata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CosmosConsumerMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBtcstkconsumer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBtcstkconsumer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBtcstkconsumer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChannelId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBtcstkconsumer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBtcstkconsumer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RollupConsumerMetadata) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBtcstkconsumer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RollupConsumerMetadata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RollupConsumerMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinalityContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBtcstkconsumer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBtcstkconsumer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBtcstkconsumer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FinalityContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBtcstkconsumer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBtcstkconsumer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBtcstkconsumer(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBtcstkconsumer
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBtcstkconsumer
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBtcstkconsumer
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBtcstkconsumer
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBtcstkconsumer
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBtcstkconsumer
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBtcstkconsumer        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBtcstkconsumer          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBtcstkconsumer = fmt.Errorf("proto: unexpected end of group")
)
